Bup::Config.plan do
  ##############################################################################
  #                                Locations                                   #
  ##############################################################################
  
  # define a ftp location using a name and the paramters.
  # usage: ftp name, parameters
  # possible parameters are:
  #   host: the host ip, ord dns
  #   user: the user to use for authentication
  #   passwd: the passwd to use for authentication
  #   root: the path to user
  ftp "example", :host => "example.com", :user => "test", :passwd => "test",
                 :root => "/backups"
  
  # define a local location if your planning to put the backup on a different
  # hard drive or just for testing.
  # usage: local name, parameters
  # possible parameters are:
  #   root: the path to user
  local "test", :root => "/tmp/backups"
  
  ##############################################################################
  #                                 Backups                                    #
  ##############################################################################
  
  # define a backup with name
  # usage: backup name, parameters
  # possible parameters are:
  #   to: the name of the location (e.g. "test" would be the local /tmp/backups)
  #   from: path to the location that should be backuped
  backup "config", :to => "test", :from => "/etc" do
    # usage: every time, type
    # available methods for time:
    #   month, months:     like 1.month, 2.months or 6.months
    #   day, days:         like 1.day, 3.days or 30.days
    #   hour, hours:       like 1.hour, 5.hours or 32.hours
    #   minutes, minutes:  like 1.minute, 10.monutes or 90.minutes
    # type: either on of the following
    #   :full (full backup)
    #   :diff (differential backup)
    #   :inc  (incrementa backup)
    
    # if you want to make a full backup every month just write it like this.
    every 1.month, :full
    
    # for an differential backup you need at least one full backup
    # place the differential after the full backup you want. The last defined
    # full backup before the differential will be used.
    every 1.week, :diff
    
    # for an incremental backup you need at least one full backup
    # place the incremental after the full backup you want. The last defined
    # full backup before the incremental will be used. Any other incremental
    # or diffenrential backup can be defined in between.
    every 1.day, :inc
  end  
end
